jobs:
  android:
    if: '! contains(toJSON(github.event.commits.*.message), ''[skip ci]'')'
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: 1. Check out code
      uses: actions/checkout@v4
      with:
        fetch-depth: '0'
    - continue-on-error: true
      name: 2. Set up Java for running Gradle build
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 17
    - continue-on-error: true
      name: 3. Enable KVM.
      run: 'echo ''KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"''
        | sudo tee /etc/udev/rules.d/99-kvm4all.rules

        sudo udevadm control --reload-rules

        sudo udevadm trigger --name-match=kvm

        '
    - continue-on-error: true
      name: 4. Run Android tests on Android API level ${{ matrix.android-api }}
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: ${{ matrix.android-api }}
        arch: x86_64
        emulator-options: '-no-window -gpu swiftshader_indirect -no-snapshot -noaudio
          -no-boot-anim -camera-back none -camera-front none

          '
        script: '# Capture logcat output from "Launch Emulator" to a file.

          adb logcat -d > emulator-startup.log

          # Shorten the logcat output, by truncating at this point, the relevant part
          is yet to come.

          # Best effort, could fail with "failed to clear the ''main'' log",

          # because something is locking logcat, so try a few times, and ignore errors
          each time.

          adb logcat --clear || true

          adb logcat --clear || true

          adb logcat --clear || true

          # Capture full logcat output to a file.

          adb logcat > emulator.log & echo $! > logcat_file.pid

          # Output instrumentation test logs to the GitHub Actions output.

          adb logcat "*:S MonitoringInstr:V AndroidJUnitRunner:V TestRequestBuilder:V
          TestExecutor:V TestRunner:V" --format=color & echo $! > logcat_console.pid


          echo 0 > gradle.exit # Set a default exit code.

          # Run the actual tests (suppress build failures by saving the exit code).

          ./gradlew :androidTest:connectedCheck --no-daemon --no-build-cache || echo
          $? > gradle.exit


          # Stop capturing logcat output.

          kill $(cat logcat_file.pid)    || echo "::warning file=.github/workflows/ci.yml::Logcat
          process $(cat logcat_file.pid) didn''t exist."

          kill $(cat logcat_console.pid) || echo "::warning file=.github/workflows/ci.yml::Logcat
          process $(cat logcat_console.pid) didn''t exist."

          # Make sure the step fails if the tests failed.

          exit $(cat gradle.exit)

          '
    - continue-on-error: true
      if: success() || failure()
      name: 5. Upload artifact "androidTest-results-${{ matrix.android-api }}"
      uses: actions/upload-artifact@v4
      with:
        name: androidTest-results-${{ matrix.android-api }}
        path: '${{ github.workspace }}/subprojects/androidTest/build/reports/androidTests/connected/**

          ${{ github.workspace }}/emulator.log

          ${{ github.workspace }}/emulator-startup.log

          '
    - continue-on-error: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      name: 6. Upload coverage report
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: true
        files: subprojects/androidTest/build/reports/coverage/androidTest/debug/connected/report.xml
    strategy:
      matrix:
        android-api:
        - 26
        - 33
    timeout-minutes: 30
  build:
    if: '! contains(toJSON(github.event.commits.*.message), ''[skip ci]'')'
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: 1. Check out code
      uses: actions/checkout@v4
      with:
        fetch-depth: '0'
    - continue-on-error: true
      name: 2. Set up Java for running Gradle build
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 17
    - continue-on-error: true
      if: matrix.java == 11 && matrix.entry.mock-maker == 'mock-maker-default'
      name: 3. Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v3.4.2
    - continue-on-error: true
      if: matrix.java == 11 && matrix.entry.mock-maker == 'mock-maker-default'
      name: 4. Build and check reproducibility of artifacts (single job only)
      run: ./check_reproducibility.sh
    - continue-on-error: true
      if: matrix.java == 11 && matrix.entry.mock-maker == 'mock-maker-default'
      name: 5. Spotless check (single job only). Run './gradlew spotlessApply' locally
        if this job fails.
      run: './gradlew spotlessCheck --stacktrace --scan

        '
    - continue-on-error: true
      env:
        MEMBER_ACCESSOR: ${{ matrix.entry.member-accessor }}
        MOCK_MAKER: ${{ matrix.entry.mock-maker }}
      name: 6. Build on Java ${{ matrix.java }} with ${{ matrix.entry.mock-maker }}
        and ${{ matrix.entry.member-accessor }}
      run: './gradlew -Pmockito.test.java=${{ matrix.java }} build idea --stacktrace
        --scan

        '
    - continue-on-error: true
      name: 7. Generate coverage report
      run: './gradlew -Pmockito.test.java=${{ matrix.java }} coverageReport --stacktrace
        --scan

        '
    - continue-on-error: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      name: 8. Upload coverage report
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: true
        files: build/reports/jacoco/mockitoCoverage/mockitoCoverage.xml
    strategy:
      matrix:
        entry:
        - member-accessor: member-accessor-default
          mock-maker: mock-maker-default
        - member-accessor: member-accessor-module
          mock-maker: mock-maker-inline
        - member-accessor: member-accessor-module
          mock-maker: mock-maker-subclass
        - member-accessor: member-accessor-reflection
          mock-maker: mock-maker-subclass
        - member-accessor: member-accessor-reflection
          mock-maker: mock-maker-inline
        java:
        - 11
        - 17
        - 21
  release:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref,
      'refs/tags/v')) && github.repository == 'mockito/mockito' && !contains(toJSON(github.event.commits.*.message),
      '[skip release]')
    needs:
    - build
    permissions:
      contents: write
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: 1. Check out code
      uses: actions/checkout@v4
      with:
        fetch-depth: '0'
    - continue-on-error: true
      name: 2. Set up Java for running Gradle build
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 21
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        NEXUS_TOKEN_PWD: ${{secrets.NEXUS_TOKEN_PWD}}
        NEXUS_TOKEN_USER: ${{secrets.NEXUS_TOKEN_USER}}
        PGP_KEY: ${{secrets.PGP_KEY}}
        PGP_PWD: ${{secrets.PGP_PWD}}
      name: 3. Build and release
      run: './gradlew githubRelease publishToSonatype closeAndReleaseStagingRepository
        releaseSummary --stacktrace

        '
name: CI
on:
  repository_dispatch:
    types: trigger-ga___ci.yml
permissions:
  contents: read
